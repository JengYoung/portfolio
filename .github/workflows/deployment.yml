# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Depoly Portfolio Application to AWS S3 Bucket (Static Web)

on:
  push:
    # NOTE: `main` branch has rule of managing deploy portfolio app in my repo!
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # NOTE: I use node.js v16.15(LTS).
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: yarn

      - name: Build and Export App
        run: yarn export

      # refer this repo. see: https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
          role-session-name: deploy-portfolio

      - name: delete all files
        run: aws s3 rm ${{ secrets.AWS_S3_BUCKET_NAME }}/ --recursive

      - run: aws s3 cp ./out/_next/ ${{ secrets.AWS_S3_BUCKET_NAME }}/_next/

      - name: Set HTML Content-Type and Copy them
        run: aws s3 sync ./out ${{ secrets.AWS_S3_BUCKET_NAME }} --exclude "*" --include "*.html" --content-type "text/html" --acl public-read --delete 

      - name: remove .html files extension
        run: for file in $(find ./out -name "*.html"); do mv "$file" "${file%%.html}"; done

      - name: Copy Other Assets
        run: aws s3 sync ./out/ ${{ secrets.AWS_S3_BUCKET_NAME }} --exclude "*" --include "**/*.(jpg|png|svg|ico|mp4|webp)" --metadata-directive --recursive REPLACE --cache-control max-age=300

      - name: Invalidate Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"